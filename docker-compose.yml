version: '3.8'

services:
  # PostgreSQL with PostGIS and pgRouting
  postgres:
    image: postgis/postgis:15-3.3
    container_name: climate_gps_postgres
    environment:
      POSTGRES_DB: climate_gps
      POSTGRES_USER: climate_user
      POSTGRES_PASSWORD: climate_password
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U climate_user -d climate_gps"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching
  redis:
    image: redis:7-alpine
    container_name: climate_gps_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # FastAPI application
  app:
    build: .
    container_name: climate_gps_app
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://climate_user:climate_password@postgres:5432/climate_gps
      - REDIS_URL=redis://redis:6379
      - DEBUG=true
    volumes:
      - .:/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  # pgAdmin for database management (optional)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: climate_gps_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@climategps.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    volumes:
      - pgadmin_data:/var/lib/pgadmin

volumes:
  postgres_data:
  redis_data:
  pgadmin_data: 